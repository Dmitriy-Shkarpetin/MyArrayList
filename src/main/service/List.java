package main.service;

import java.util.Comparator;

/**
 * Интерфейс упорядоченной коллекции.
 * Он предоставляется возможность доступа к элементам коллекции по индексу и по значению
 * (так как реализации позволяют хранить дубликаты, результатом поиска по значению будет первое найденное вхождение).
 * @param <T> - тип элементов в списке
 */
public interface List<T> {

    /**
     * Метод добавляет указанный элемент в конец списка
     * @param element - добавляемый элемент
     */
    void add(T element);

    /**
     * Метод добавляет указанный элемент по указанному индексу.
     * Все элементы включая элемент с этого индекса сдвигаются вправо на одну позицию.
     * @param element - добавляемый элемент
     * @param index - индекс добавления элемента
     */
    void add(T element, int index);

    /**
     * Метод вставляет указанный элемент по указанному индексу.
     * Элемент, который находился по этому индексу заменяется на новый.
     * @param element - вставляемый элемент
     * @param index - индекс вставки элемента
     */
    void set(T element, int index);

    /**
     * Метод получает элемент по указанному индексу
     * @param index - индекс получаемого элемента
     * @return - возвращает элемент
     */
    T get(int index);

    /**
     * Метод получает индекс первого найденного элемента
     * @param object - элемент в списке
     * @return - индекс искомого элемента
     */
    int getIndex(T object);

    /**
     * Метод удаляет из списка элемент по указанному индексу.
     * Все последующие элементы при этом сдвигаются влево на одну позицию.
     * @param index - индекс удаляемого элемента
     */
    void delete(int index);

    /**
     * Метод возвращает количество элементов в списке
     * @return - количество элементов в списке
     */
    int size();

    /**
     * Метод сортирует элементы в списке, согласно указанному в параметрах Comparator
     * @param comparator - Comparator, согласно которому сортируется список
     */
    void sort(Comparator<? super T> comparator);
}
